definitions:
  enums.SortDirection:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Ascending
    - Descending
  viewModel.Address:
    properties:
      city:
        type: string
      roomNumber:
        type: string
      state:
        type: string
      street:
        type: string
      zipCode:
        type: string
    required:
    - city
    - roomNumber
    - state
    - street
    - zipCode
    type: object
  viewModel.Contact:
    properties:
      address:
        $ref: '#/definitions/viewModel.Address'
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      leaseID:
        type: integer
      phoneNumber:
        type: string
      salutation:
        type: string
    type: object
  viewModel.CreateLease:
    properties:
      address:
        $ref: '#/definitions/viewModel.Address'
      amenities:
        type: string
      appliances:
        type: string
      baths:
        type: number
      beds:
        type: integer
      description:
        type: string
      endDate:
        type: string
      furnished:
        type: boolean
      name:
        maxLength: 20
        minLength: 3
        type: string
      parking:
        type: boolean
      parkingCost:
        type: number
      rent:
        type: number
      squareFootage:
        type: integer
      startDate:
        type: string
      utilities:
        type: number
    required:
    - address
    - name
    - rent
    type: object
  viewModel.EditLease:
    properties:
      address:
        $ref: '#/definitions/viewModel.Address'
      amenities:
        type: string
      appliances:
        type: string
      baths:
        type: number
      beds:
        type: integer
      description:
        type: string
      endDate:
        type: string
      furnished:
        type: boolean
      id:
        type: integer
      name:
        type: string
      parking:
        type: boolean
      parkingCost:
        type: number
      rent:
        type: number
      squareFootage:
        type: integer
      startDate:
        type: string
      utilities:
        type: number
    type: object
  viewModel.Lease:
    properties:
      address:
        $ref: '#/definitions/viewModel.Address'
      amenities:
        type: string
      appliances:
        type: string
      baths:
        type: number
      beds:
        type: integer
      contacts:
        items:
          $ref: '#/definitions/viewModel.Contact'
        type: array
      description:
        type: string
      endDate:
        type: string
      furnished:
        type: boolean
      id:
        type: integer
      name:
        type: string
      ownerID:
        type: integer
      parking:
        type: boolean
      parkingCost:
        type: number
      rent:
        type: number
      squareFootage:
        type: integer
      startDate:
        type: string
      totalCost:
        type: number
      utilities:
        type: number
    type: object
  viewModel.PaginatedLeasesRequest:
    properties:
<<<<<<< HEAD
      filter:
        type: string
=======
>>>>>>> 6e818e96f8cddbc495c2729888b99d707e55d841
      pageSize:
        type: integer
      paginationToken:
        type: string
      sortDirection:
        $ref: '#/definitions/enums.SortDirection'
      sortToken:
        type: string
    type: object
<<<<<<< HEAD
  viewModel.PaginatedLeasesResult:
    properties:
      count:
        type: integer
      leases:
        items:
          $ref: '#/definitions/viewModel.Lease'
        type: array
      paginationToken:
        type: string
    type: object
=======
>>>>>>> 6e818e96f8cddbc495c2729888b99d707e55d841
host: localhost:8080
info:
  contact: {}
  description: Server for subleasing website ReLease
  title: ReLease API
  version: "1.0"
paths:
  /leases:
    get:
      description: get all leases
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/viewModel.Lease'
            type: array
        "500":
          description: Internal Server Error
      summary: List leases
      tags:
      - leases
    post:
      consumes:
      - application/json
      description: post a lease
      parameters:
      - description: create lease
        in: body
        name: createLeaseRequest
        required: true
        schema:
          $ref: '#/definitions/viewModel.CreateLease'
      produces:
      - text/plain
      responses:
        "201":
          description: id of created lease
          schema:
            type: integer
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Auth0: []
      summary: Create a lease
      tags:
      - leases
  /leases/{id}:
    delete:
      description: delete a lease by id
      parameters:
      - description: lease id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Auth0: []
      summary: Delete a lease
      tags:
      - leases
    put:
      consumes:
      - application/json
      description: update a lease by id
      parameters:
      - description: lease id
        in: path
        name: id
        required: true
        type: integer
      - description: edit lease request
        in: body
        name: editLeaseRequest
        required: true
        schema:
          $ref: '#/definitions/viewModel.EditLease'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Auth0: []
      summary: Update a lease
      tags:
      - leases
  /leases/paged:
    get:
      description: get paged leases
      parameters:
<<<<<<< HEAD
      - description: page size, column to sort on, pagination token, sort direction,
          filter
=======
      - description: get paginated lease request
>>>>>>> 6e818e96f8cddbc495c2729888b99d707e55d841
        in: body
        name: getPaginatedLeasesRequest
        required: true
        schema:
          $ref: '#/definitions/viewModel.PaginatedLeasesRequest'
<<<<<<< HEAD
=======
      produces:
      - application/json
>>>>>>> 6e818e96f8cddbc495c2729888b99d707e55d841
      responses:
        "200":
          description: OK
          schema:
<<<<<<< HEAD
            $ref: '#/definitions/viewModel.PaginatedLeasesResult'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get paged leases
=======
            items:
              $ref: '#/definitions/viewModel.Lease'
            type: array
        "500":
          description: Internal Server Error
      summary: get paged leases
>>>>>>> 6e818e96f8cddbc495c2729888b99d707e55d841
      tags:
      - leases
securityDefinitions:
  Auth0:
    description: Auth0 protects our endpoints
    flow: application
    tokenUrl: https://dev-nkzmwy1mucvvl5xb.us.auth0.com/oauth/token
    type: oauth2
swagger: "2.0"
